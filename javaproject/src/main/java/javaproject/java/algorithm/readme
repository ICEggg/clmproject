BIG O （大O标记法）（是时间/空间 复杂度的表示方法）
1.时间复杂度：算法所花的时间，是否根据数据规模的增大而增大
数组的插入比链表快，因为数组是根据下标（索引）直接插入的。
链表找一个元素，总是从第一个开始往后找。

比如一个数组有十个元素，找到其中一个花了1秒
    一个数组有十万个元素，找到其中一个的时间也是1秒，
这时，时间复杂度为O(1),表示时间不随数组规模的增大而增大
？求数组平均数的复杂度：O(n),因为数组越大，数越多，相加的时间越多

比如一个链表，总是从第一个开始往后找，要找到链表的最后一个数，就要花很多时间，
链表找一个数的时间，随着链表元素数量的增大而增大
这时，时间复杂度是O(n)

时间复杂度可以有多个，比如O(log n),O(n的平方、立方) 等等。。


1.选择排序    时间复杂度：O(n2)
    最简单但是最没用的排序算法，因为最不稳定，基本用不上
    思路：一个数组5个数，找到最小的，和排在第一个的数调换。然后再循环，找第二小的，和第二个数换位子，以此类推
    改进：1.每次循环找到最小值的时候，也可以同时，把最大值也找到
          2.每次比较是前一个值和后一个值比较，可不可以前一个值和后面两个（三个等），其中最小的一个比较？
    不稳定：比如一个数组有两个相等的数字，当多次比较的时候，这两个的顺序是不固定的，会变化，所以不稳定

2.冒泡排序
       思路：两个相邻的元素比较，索引递增
3.插入排序
4.希尔排序
其实就是插入排序的改良版，比插入排序快的原因是：在间隔大的时候，移动次数少。在间隔小的时候，移动距离短

归并排序
快速排序
双轴快排
计数排序
基数排序
桶排序
