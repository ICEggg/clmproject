<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--配置文件的目录，必须和对应的IUserDao，的目录结构相同-->
<mapper namespace="clm.xml.dao.IUserDao">
    <!--  查询结果的列名和实体类的属性名的对应关系  -->
    <resultMap id="userMap" type="clm.xml.domain.User">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
    </resultMap>

    <!--<resultMap id="queryvo" type="clm.xml.domain.QueryVo">
        <result property="user" />
    </resultMap>-->

    <!--  了解的内容，抽取重复的sql语句  -->
    <sql id="defaultUser">
        select * from user
    </sql>

    <!--id必须是dao接口的方法名-->
<!--    <select id="findAll" resultType="clm.xml.domain.User">-->
    <select id="findAll" resultMap="userMap">
--         select *from user;
        <include refid="defaultUser"></include>
    </select>

    <select id="findUserById" parameterType="int" resultType="user">
        select * from user where id=#{id}
    </select>


    <insert id="saveUser" parameterType="clm.xml.domain.User">
         --配置插入操作后，获取插入数据的id
         <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
             select last_insert_id();
         </selectKey>

        insert into user(username,address,sex,birthday) values(#{username},#{address},#{sex},#{birthday});
    </insert>

    <update id="updateUser" parameterType="clm.xml.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id=#{id}
    </delete>

    <select id="findUserByName" parameterType="string" resultType="clm.xml.domain.User">
        select * from user where username like #{username}
    </select>

<!--    根据Query的条件查询用户-->
    <select id="findUserByVo" parameterType="clm.xml.domain.QueryVo" resultType="clm.xml.domain.User">
        select * from user where username like #{user.username}
    </select>

    <!--<select id="findUserByCondition" resultMap="userMap">
        select * from user where 1=1
        <if test="username != null">
            and username = #{username}
        </if>
        <if test="sex">
            and sex = #{sex}
        </if>
    </select>-->
    <!--  或者写成这种方式  -->
    <select id="findUserByCondition" resultMap="userMap">
        select * from user
        <where>
            <if test="username != null">
                and username = #{username}
            </if>
            <if test="sex">
                and sex = #{sex}
            </if>
        </where>
    </select>



    <select id="findUserInIds" resultMap="userMap" parameterType="clm.xml.domain.QueryVo">
        select * from user
        <where>
            <if test="ids != null and ids.size()>0">
                <foreach collection="ids" open="and id in (" close=")" item="id" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

</mapper>













